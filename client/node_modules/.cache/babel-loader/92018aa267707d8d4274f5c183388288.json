{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useLogin = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setLoading(true);\n\n    // compare supplied credentials with DB\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('userInfo', JSON.stringify(json));\n\n      // update auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setLoading(false);\n    }\n  };\n  return {\n    login,\n    loading,\n    error\n  };\n};\n_s(useLogin, \"gvZD6knNkNOo3N4InB0vaH5h/Z8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","show","setShow","email","setEmail","error","setError","password","setPassword","loading","setLoading","dispatch","login","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/Adam/repos/codeschool/projects/udemy/react/holla-back/client/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nexport const useLogin = () => {\r\n    const [ show, setShow] = useState(false); \r\n    const [ email, setEmail] = useState(''); \r\n    const [ error, setError] = useState(''); \r\n    const [ password, setPassword] = useState(''); \r\n    const [loading, setLoading] = useState(false);\r\n    const { dispatch } = useAuthContext()\r\n\r\n    const login = async (email, password) => {\r\n        setLoading(true)\r\n\r\n        // compare supplied credentials with DB\r\n        const response = await fetch('/api/user/login', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ email, password })\r\n          })\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setLoading(false)\r\n            setError(json.error); \r\n        }\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem('userInfo', JSON.stringify(json))\r\n\r\n            // update auth context\r\n            dispatch({type: 'LOGIN', payload: json})\r\n            setLoading(false)\r\n\r\n        }\r\n    }\r\n    return { login, loading, error }\r\n}\r\n  "],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC1B,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAM,CAAEK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAAEO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAAES,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM;IAAEa;EAAS,CAAC,GAAGZ,cAAc,EAAE;EAErC,MAAMa,KAAK,GAAG,OAAOT,KAAK,EAAEI,QAAQ,KAAK;IACrCG,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,KAAK;QAAEI;MAAS,CAAC;IAC1C,CAAC,CAAC;IACJ,MAAMa,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdX,UAAU,CAAC,KAAK,CAAC;MACjBJ,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IAEA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAEtD;MACAT,QAAQ,CAAC;QAACa,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MACxCV,UAAU,CAAC,KAAK,CAAC;IAErB;EACJ,CAAC;EACD,OAAO;IAAEE,KAAK;IAAEH,OAAO;IAAEJ;EAAM,CAAC;AACpC,CAAC;AAAA,GAlCYL,QAAQ;EAAA,QAMID,cAAc;AAAA"},"metadata":{},"sourceType":"module"}