{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const signup = async (email, password) => {\n    setLoading(true);\n    setError(null);\n    const response = await fetch('api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setLoading(false);\n      setError(json.error);\n    }\n    if (response.ok) {\n      localStorage.setItem('userInfo', JSON.stringify(json));\n\n      // update auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setLoading(false);\n    }\n  };\n  return {\n    signup,\n    loading,\n    error\n  };\n};\n_s(useSignup, \"8z8+JR91pT4cOrvzWVyZ6/nLAQY=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","loading","setLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/Adam/repos/codeschool/projects/udemy/react/holla-back/client/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useAuthContext } from './useAuthContext'\r\n\r\nexport const useSignup = () => {\r\n    const [error, setError] = useState(null)\r\n    const [loading, setLoading] = useState(null)\r\n    const { dispatch } = useAuthContext()\r\n\r\n    const signup = async(email, password) => {\r\n        setLoading(true)\r\n        setError(null)\r\n        const response = await fetch('api/user/signup', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ email, password })\r\n        })\r\n\r\n        const json = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setLoading(false)\r\n            setError(json.error); \r\n        }\r\n\r\n        if (response.ok) {\r\n            localStorage.setItem('userInfo', JSON.stringify(json))\r\n\r\n            // update auth context\r\n            dispatch({type: 'LOGIN', payload: json})\r\n            setLoading(false)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return { signup, loading, error }\r\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,SAAS,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM;IAAEO;EAAS,CAAC,GAAGN,cAAc,EAAE;EAErC,MAAMO,MAAM,GAAG,OAAMC,KAAK,EAAEC,QAAQ,KAAK;IACrCJ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,IAAI,CAAC;IACd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC5C,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,EAAE;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdb,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;IACxB;IAEA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACbC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;;MAEtD;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEL;MAAI,CAAC,CAAC;MACxCZ,UAAU,CAAC,KAAK,CAAC;IAErB;EACJ,CAAC;EAGD,OAAO;IAAEE,MAAM;IAAEH,OAAO;IAAEF;EAAM,CAAC;AACrC,CAAC;AAAA,GAjCYD,SAAS;EAAA,QAGGD,cAAc;AAAA"},"metadata":{},"sourceType":"module"}