{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\repos\\\\codeschool\\\\projects\\\\udemy\\\\react\\\\holla-back\\\\client\\\\src\\\\components\\\\misc\\\\UpdateGroupChatModal.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Modal, ModalOverlay, Button, IconButton, ModalContent, ModalHeader, ModalFooter, Box, ModalBody, ModalCloseButton, useDisclosure } from '@chakra-ui/react';\nimport UserBadgeItem from './UserBadgeItem';\nimport { ViewIcon } from '@chakra-ui/icons';\nimport { useAuthContext } from '../../hooks/useAuthContext';\nimport { useChatContext } from '../../hooks/useChatContext';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateGroupChatModal = _ref => {\n  _s();\n  let {\n    fetchAgain,\n    setFetchAgain\n  } = _ref;\n  const [groupChatName, setGroupChatName] = useState('');\n  const [search, setSearch] = useState('');\n  const [searchResult, setSearchResult] = useState(['']);\n  const [loading, setLoading] = useState(false);\n  const [renameLoading, setRenameLoading] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const {\n    selectedChat,\n    setSelectedChat\n  } = useChatContext();\n  const {\n    user\n  } = useAuthContext();\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      display: {\n        base: 'flex'\n      },\n      icon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 52\n      }, this),\n      onClick: onOpen,\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      isCentered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          fontSize: \"35px\",\n          fontFamily: \"Work sans\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: selectedChat.chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: selectedChat.users.map(u => {\n              /*#__PURE__*/_jsxDEV(UserBadgeItem, {\n                user: u,\n                admin: user,\n                handleFunction: () => handleDelete(u)\n              }, `${u.email}-${u._id}-${u.name}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"blue\",\n            mr: 3,\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"ghost\",\n            children: \"Secondary Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateGroupChatModal, \"gVXZmZC0Z3FwgQILi73aAE6a+ys=\", true, function () {\n  return [useDisclosure, useChatContext, useAuthContext];\n});\n_c = UpdateGroupChatModal;\nexport default UpdateGroupChatModal;\nvar _c;\n$RefreshReg$(_c, \"UpdateGroupChatModal\");","map":{"version":3,"names":["React","Modal","ModalOverlay","Button","IconButton","ModalContent","ModalHeader","ModalFooter","Box","ModalBody","ModalCloseButton","useDisclosure","UserBadgeItem","ViewIcon","useAuthContext","useChatContext","UpdateGroupChatModal","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","useState","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameLoading","setRenameLoading","isOpen","onOpen","onClose","selectedChat","setSelectedChat","user","toast","useToast","base","chatName","users","map","u","handleDelete","email","_id","name"],"sources":["C:/Users/Adam/repos/codeschool/projects/udemy/react/holla-back/client/src/components/misc/UpdateGroupChatModal.js"],"sourcesContent":["import React from 'react'\r\nimport {\r\n    Modal,\r\n    ModalOverlay,\r\n    Button,\r\n    IconButton,\r\n    ModalContent,\r\n    ModalHeader,\r\n    ModalFooter,\r\n    Box,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    useDisclosure\r\n  } from '@chakra-ui/react'\r\n  import UserBadgeItem from './UserBadgeItem';\r\nimport { ViewIcon } from '@chakra-ui/icons'\r\nimport { useAuthContext } from '../../hooks/useAuthContext'\r\nimport { useChatContext } from '../../hooks/useChatContext'\r\n\r\nconst UpdateGroupChatModal = ({ fetchAgain, setFetchAgain }) => {\r\n    const [groupChatName, setGroupChatName] = useState('')\r\n    const [search, setSearch] = useState('')\r\n    const [searchResult, setSearchResult] = useState([''])\r\n    const [loading, setLoading] = useState(false)\r\n    const [renameLoading, setRenameLoading] = useState(false)\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const { selectedChat, setSelectedChat, } = useChatContext() \r\n    const {user} = useAuthContext();\r\n    const toast = useToast(); \r\n    return (\r\n        <>\r\n        <IconButton display={{base: 'flex'}} icon={<ViewIcon/>} onClick={onOpen}>Open Modal</IconButton>\r\n  \r\n        <Modal isOpen={isOpen} onClose={onClose} isCentered>\r\n          <ModalOverlay />\r\n          <ModalContent>\r\n            <ModalHeader\r\n            fontSize='35px'\r\n            fontFamily='Work sans'\r\n            display='flex'\r\n            justifyContent='center'\r\n            >\r\n            {selectedChat.chatName}\r\n            </ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n            <Box>\r\n            {selectedChat.users.map(u => {\r\n                <UserBadgeItem\r\n          key={`${u.email}-${u._id}-${u.name}`}\r\n          user={u}\r\n          admin={user}\r\n          handleFunction={()=> handleDelete(u)}\r\n     />\r\n            })}\r\n            </Box>\r\n            </ModalBody>\r\n  \r\n            <ModalFooter>\r\n              <Button colorScheme='blue' mr={3} onClick={onClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant='ghost'>Secondary Action</Button>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </Modal>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default UpdateGroupChatModal\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}