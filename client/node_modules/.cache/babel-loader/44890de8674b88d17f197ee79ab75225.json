{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\repos\\\\codeschool\\\\projects\\\\udemy\\\\react\\\\holla-back\\\\client\\\\src\\\\components\\\\misc\\\\MyChats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useToast, Box, Button, Stack, Text } from '@chakra-ui/react';\nimport { ChatState } from '../../context/ChatContext';\nimport { useChatContext } from '../../hooks/useChatContext';\nimport { useAuthContext } from '../../hooks/useAuthContext';\nimport { AddIcon } from '@chakra-ui/icons';\nimport ChatLoading from './ChatLoading';\nimport { getSender } from '../../config/ChatLogic';\nimport GroupChatModal from './GroupChatModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyChats = _ref => {\n  _s();\n  let {\n    fetchagain\n  } = _ref;\n  const [loggedUser, setLoggedUser] = useState();\n  const [loadingChat, setLoadingChat] = useState(false);\n  const {\n    selectedChat,\n    setSelectedChat,\n    chats,\n    setChats\n  } = useChatContext();\n  const {\n    user\n  } = useAuthContext();\n  const fetchChats = async () => {\n    // format param for JSON stringify\n    // let param = {userId: userId};\n    try {\n      setLoadingChat(true);\n      const response = await fetch(`/api/chat`, {\n        method: 'GET',\n        headers: {\n          'Content-type': 'application/json',\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      setChats(json);\n      // console.log(selectedChat)\n      setLoadingChat(false);\n      // close side drawer\n      // onClose()\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem('userInfo')));\n    // return all of user's chat's on render\n    fetchChats();\n    //  whenever the chats are altered fetch again changes to \n    //true and fetchChats() is called again\n  }, [fetchagain]);\n  const toast = useToast();\n  return (\n    /*#__PURE__*/\n    //  when chat is selected, this box will disappear and make room\n    // for active chat screen\n    _jsxDEV(Box, {\n      display: {\n        base: selectedChat ? 'none' : 'flex',\n        md: 'flex'\n      },\n      flexDir: \"column\",\n      alignItems: \"center\",\n      p: {\n        base: 3,\n        md: 2,\n        sm: 1\n      },\n      bg: \"white\",\n      w: {\n        base: '100%',\n        md: '31%'\n      },\n      borderRadius: \"lg\",\n      borderWidth: \"1px\",\n      mt: 1,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        pb: 3,\n        px: 3,\n        fontSize: {\n          base: \"28px\",\n          md: \"30px\",\n          lg: '40px'\n        },\n        fontFamily: \"Work sans\",\n        display: \"flex\",\n        flexDir: \"row\",\n        w: \"100%\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontFamily: \"Work sans\",\n          fontSize: {\n            base: '24px',\n            lg: '32px'\n          },\n          children: \"My Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(GroupChatModal, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            display: \"flex\",\n            paddingX: {\n              base: 'none',\n              md: 1,\n              lg: 2\n            },\n            fontSize: {\n              base: '17px',\n              md: '10px',\n              lg: '17px'\n            },\n            rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 12\n            }, this),\n            children: \"New Group Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 1\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        pb: 3,\n        px: 3,\n        bg: \"#F8F8F8\",\n        fontFamily: \"Work sans\",\n        display: \"flex\",\n        flexDir: \"column\",\n        w: \"100%\",\n        h: \"100%\",\n        borderRadius: \"lg\",\n        overflowY: \"hidden\",\n        children: chats ? /*#__PURE__*/_jsxDEV(Stack, {\n          overflowY: \"scroll\",\n          h: \"100%\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(Box, {\n            onClick: () => setSelectedChat(chat),\n            cursor: \"pointer\",\n            bg: selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\",\n            color: selectedChat === chat ? \"white\" : \"black\",\n            px: 3,\n            py: 2,\n            borderRadius: \"lg\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              children: chat.isGroupChat ? chat.chatName : getSender(loggedUser, chat.users)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 1\n            }, this)\n          }, `${chat._id}-${chat.name}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }, this) : /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)\n  );\n};\n_s(MyChats, \"zw1QOQngQ9GueqomD63lgmdUlo4=\", false, function () {\n  return [useChatContext, useAuthContext, useToast];\n});\n_c = MyChats;\nexport default MyChats;\nvar _c;\n$RefreshReg$(_c, \"MyChats\");","map":{"version":3,"names":["React","useState","useEffect","useToast","Box","Button","Stack","Text","ChatState","useChatContext","useAuthContext","AddIcon","ChatLoading","getSender","GroupChatModal","MyChats","fetchagain","loggedUser","setLoggedUser","loadingChat","setLoadingChat","selectedChat","setSelectedChat","chats","setChats","user","fetchChats","response","fetch","method","headers","token","json","error","console","log","JSON","parse","localStorage","getItem","toast","base","md","sm","lg","map","chat","isGroupChat","chatName","users","_id","name"],"sources":["C:/Users/Adam/repos/codeschool/projects/udemy/react/holla-back/client/src/components/misc/MyChats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useToast, Box, Button, Stack, Text } from '@chakra-ui/react';\r\nimport { ChatState } from '../../context/ChatContext';\r\nimport { useChatContext } from '../../hooks/useChatContext';\r\nimport { useAuthContext } from '../../hooks/useAuthContext';\r\nimport { AddIcon } from '@chakra-ui/icons';\r\nimport ChatLoading from './ChatLoading';\r\nimport { getSender } from '../../config/ChatLogic'\r\nimport GroupChatModal from './GroupChatModal'\r\n\r\nconst MyChats = ({ fetchagain }) => {\r\n  const  [loggedUser, setLoggedUser] = useState();\r\n  const [loadingChat, setLoadingChat] = useState(false\r\n    );\r\n  const { selectedChat, setSelectedChat, chats, setChats } = useChatContext() \r\n  const {user} = useAuthContext();\r\n\r\n  const fetchChats = async() => {\r\n   \r\n        // format param for JSON stringify\r\n        // let param = {userId: userId};\r\n          try {\r\n            setLoadingChat(true)\r\n            const response = await fetch(`/api/chat`, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${user.token}`,\r\n              },\r\n            }) \r\n            const json = await response.json(); \r\n         \r\n            setChats(json)\r\n            // console.log(selectedChat)\r\n            setLoadingChat(false)\r\n            // close side drawer\r\n            // onClose()\r\n                  }\r\n     catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoggedUser(JSON.parse(localStorage.getItem('userInfo')));\r\n    // return all of user's chat's on render\r\n fetchChats()\r\n//  whenever the chats are altered fetch again changes to \r\n//true and fetchChats() is called again\r\n  }, [fetchagain]);\r\n\r\n\r\n  const toast = useToast(); \r\n  return (\r\n   \r\n  //  when chat is selected, this box will disappear and make room\r\n  // for active chat screen\r\n   <Box\r\n   display={{ base: selectedChat ? 'none' : 'flex', md: 'flex' }}\r\n   flexDir='column'\r\n   alignItems='center'\r\n   p={{base: 3, md: 2, sm: 1}}\r\n   bg='white'\r\n   w={{ base: '100%', md: '31%'}}\r\n   borderRadius='lg'\r\n   borderWidth='1px'\r\n   mt={1}\r\n   >\r\n   <Box\r\n        pb={3}\r\n        px={3}\r\n        fontSize={{ base: \"28px\", md: \"30px\", lg: '40px' }}\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        flexDir='row'\r\n        w=\"100%\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n      >\r\n<Text\r\nfontFamily='Work sans'\r\nfontSize={{base: '24px', lg: '32px'}}\r\n\r\n>My Chats\r\n</Text>\r\n<GroupChatModal>\r\n<Button\r\ndisplay='flex'\r\npaddingX={{base: 'none', md: 1, lg: 2}}\r\nfontSize={{ base: '17px', md: '10px', lg: '17px' }}\r\nrightIcon={<AddIcon />}\r\n>\r\nNew Group Chat\r\n</Button>\r\n</GroupChatModal>\r\n   </Box>\r\n   <Box\r\n    pb={3}\r\n        px={3}\r\n        bg='#F8F8F8'\r\n        fontFamily=\"Work sans\"\r\n        display=\"flex\"\r\n        flexDir='column'\r\n        w=\"100%\"\r\n        h='100%'\r\n        borderRadius='lg'\r\n        overflowY='hidden'\r\n   >\r\n  {chats ? (\r\n    <Stack overflowY='scroll'\r\n    h='100%'>\r\n   {chats.map(chat => (\r\n    <Box\r\n      onClick={() => setSelectedChat(chat)}\r\n      cursor=\"pointer\"\r\n      bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\r\n      color={selectedChat === chat ? \"white\" : \"black\"}\r\n      px={3}\r\n      py={2}\r\n      borderRadius=\"lg\"\r\n      key={`${chat._id}-${chat.name}`}\r\n    >\r\n  {/* check chat logic and below */}\r\n<Text>\r\n  {chat.isGroupChat ?\r\n    chat.chatName \r\n  :  getSender(loggedUser, chat.users) }\r\n</Text>\r\n    </Box>\r\n  ))}\r\n    </Stack>\r\n    \r\n  ) : (\r\n<ChatLoading/>\r\n  )}\r\n   </Box>\r\n   </Box>\r\n  )\r\n}\r\n\r\nexport default MyChats\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}