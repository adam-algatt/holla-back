{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adam\\\\repos\\\\codeschool\\\\projects\\\\udemy\\\\react\\\\holla-back\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// reducer for global state of \n//session status\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// context with user state and reducer method\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null\n  });\n  //   if user session storage in LS run 'LOGIN' case\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('userInfo'));\n    if (user) {\n      dispatch({\n        type: 'LOGIN',\n        payload: user\n      });\n    }\n  }, []);\n\n  // console.log(`User status`, state)\n\n  // destructured user state and reducer method\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"FBQnRkRjgRfP5Jqw8VZL1/9oDNw=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","AuthContext","authReducer","state","action","type","user","payload","AuthContextProvider","children","dispatch","JSON","parse","localStorage","getItem"],"sources":["C:/Users/Adam/repos/codeschool/projects/udemy/react/holla-back/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect } from 'react'\r\n\r\nexport const AuthContext = createContext(); \r\n\r\n// reducer for global state of \r\n//session status\r\nexport const authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN': \r\n    return { user: action.payload }\r\n    case 'LOGOUT': \r\n    return { user: action.payload }\r\n    default: \r\n    return state\r\n  }\r\n}\r\n\r\n// context with user state and reducer method\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, {\r\n    user: null\r\n  })\r\n//   if user session storage in LS run 'LOGIN' case\r\nuseEffect(() => {\r\n    const user = JSON.parse(localStorage.getItem('userInfo'))\r\n\r\n    if (user) {\r\n        dispatch({ type: 'LOGIN', payload: user })\r\n    }\r\n}, [])\r\n\r\n// console.log(`User status`, state)\r\n\r\n// destructured user state and reducer method\r\n\r\nreturn (\r\n    <AuthContext.Provider value={{ ...state, dispatch }}\r\n    >\r\n        { children }\r\n    </AuthContext.Provider>\r\n)\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAE5D,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAE;;AAE1C;AACA;AACA,OAAO,MAAMI,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,OAAO;MACZ,OAAO;QAAEC,IAAI,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAC/B,KAAK,QAAQ;MACb,OAAO;QAAED,IAAI,EAAEF,MAAM,CAACG;MAAQ,CAAC;IAC/B;MACA,OAAOJ,KAAK;EAAA;AAEhB,CAAC;;AAED;AACA,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGX,UAAU,CAACG,WAAW,EAAE;IAChDI,IAAI,EAAE;EACR,CAAC,CAAC;EACJ;EACAN,SAAS,CAAC,MAAM;IACZ,MAAMM,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAEzD,IAAIR,IAAI,EAAE;MACNI,QAAQ,CAAC;QAAEL,IAAI,EAAE,OAAO;QAAEE,OAAO,EAAED;MAAK,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;;EAEA,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAE,GAAGH,KAAK;MAAEO;IAAS,CAAE;IAAA,UAE9CD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE3B,CAAC;AAAA,GAvBYD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}